{"version":3,"sources":["components/Button/Button.tsx","views/Bond/components/ExchangeModal.tsx","hooks/useCatchError.ts","views/Bond/components/ExchangeCard.tsx","hooks/useCashPriceInLastTWAP.ts","views/Bond/components/ExchangeStat.tsx","hooks/useBondsPurchasable.ts","bnbm-finance/constants.ts","views/Bond/Bond.tsx","hooks/useApprove.ts","components/UnlockWallet/UnlockWallet.tsx","components/Spacer/Spacer.tsx"],"names":["StyledButton","styled","button","props","theme","color","grey","boxShadow","disabled","fontSize","size","padding","undefined","StyledLink","Link","spacing","StyledExternalLink","a","Button","buttonColor","buttonSize","buttonPadding","children","href","onClick","text","to","variant","useContext","ThemeContext","teal","primary","main","ButtonChild","useMemo","target","ExchangeModal","max","title","description","onConfirm","onDismiss","action","tokenName","useState","val","setVal","fullBalance","getFullDisplayBalance","handleChange","useCallback","e","currentTarget","value","handleSelectMax","Modal","ModalTitle","TokenInput","onSelectMax","onChange","symbol","Label","ModalActions","useCatchError","addPopup","useAddPopup","promise","message","catch","err","includes","console","error","stack","StyledCardTitle","div","StyledCardIcon","StyledExchanger","StyledExchangeArrow","StyledToken","StyledCardActions","StyledDesc","span","StyledCardContentInner","ExchangeCard","fromToken","fromTokenName","toToken","toTokenName","priceDesc","onExchange","disabledDescription","catchError","Treasury","useBnbmFinance","contracts","useApprove","address","approveStatus","approve","balance","useTokenBalance","useModal","onPresent","Card","CardContent","TokenSymbol","icon","faArrowRight","ApprovalState","APPROVED","PENDING","UNKNOWN","useCashPriceInLastTWAP","BigNumber","from","price","setPrice","bnbmFinance","fetchCashPrice","getBnbmPriceInLastTWAP","useEffect","refreshInterval","setInterval","config","clearInterval","ExchangeStat","style","backgroundColor","useBondsPurchasable","setBalance","getBondsPurchasable","fetchBondsPurchasable","DECIMALS_18","pow","BOND_REDEEM_PRICE_BN","mul","StyledBond","StyledCardWrapper","StyledStatsWrapper","Bond","path","useRouteMatch","account","useWallet","addTransaction","useTransactionAdder","bondStat","useBondStats","cashPrice","bondsPurchasable","bondBalance","BBNB","handleBuyBonds","amount","buyBonds","tx","summary","Number","toFixed","handleRedeemBonds","redeemBonds","isBondRedeemable","gt","isBondPurchasable","tokenInFtm","isBondPayingPremium","bondScale","Page","Helmet","exact","textAlign","Box","mt","marginTop","Grid","item","xs","sm","justify","margin","display","Alert","fontFamily","severity","BNBM","getDisplayBalance","eq","Spacer","UnlockWallet","APPROVE_AMOUNT","ethers","constants","MaxUint256","APPROVE_BASE_AMOUNT","token","spender","pendingApproval","useHasPendingApproval","currentAllowance","useAllowance","approvalState","lt","NOT_APPROVED","response","approval","tokenAddress","position","top","left","transform","AccountButton","StyledSpacer","s"],"mappings":"mXA0FMA,EAAeC,IAAOC,OAAV,+bAEI,SAACC,GAAD,OAAWA,EAAMC,MAAMC,MAAMC,KAAK,QAGxC,SAACH,GAAD,OAAWA,EAAMI,aACtB,SAACJ,GAAD,OAAaA,EAAMK,SAAP,UAAmCL,EAAME,MAAzC,MAAkBF,EAAME,SAGhC,SAACF,GAAD,OAAWA,EAAMM,YAEpB,SAACN,GAAD,OAAWA,EAAMO,QAGX,SAACP,GAAD,OAAWA,EAAMQ,WAChB,SAACR,GAAD,OAAWA,EAAMQ,WAChB,SAACR,GAAD,OAAaA,EAAMK,SAAuB,YAAZI,KAG1B,SAACT,GAAD,OAAWA,EAAME,SAC5B,SAACF,GAAD,OAAWA,EAAMC,MAAMC,MAAMC,KAAK,QAIzCO,EAAaZ,YAAOa,IAAPb,CAAH,qNAOF,SAACE,GAAD,OAAYA,EAAMC,MAAMW,QAAQ,MAC/B,SAACZ,GAAD,OAAWA,EAAMC,MAAMW,QAAQ,MAIxCC,EAAqBf,IAAOgB,EAAV,qNAOV,SAACd,GAAD,OAAYA,EAAMC,MAAMW,QAAQ,MAC/B,SAACZ,GAAD,OAAWA,EAAMC,MAAMW,QAAQ,MAI/BG,EA1HuB,SAAC,GAAkE,IAGnGC,EAWAC,EACAC,EACAZ,EAhBkCa,EAAgE,EAAhEA,SAAUd,EAAsD,EAAtDA,SAAUe,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,QAASd,EAA6B,EAA7BA,KAAMe,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,GAAIC,EAAa,EAAbA,QACzF,EAAyBC,qBAAWC,KAA7BxB,EAAP,EAAOA,MAAOU,EAAd,EAAcA,QAGd,OAAQY,GACN,IAAK,YACHR,EAAcd,EAAMyB,KAAK,KACzB,MACF,IAAK,UACL,QACEX,EAAcd,EAAM0B,QAAQC,KAOhC,OAAQtB,GACN,IAAK,KACHW,EAAgBN,EAAQ,GACxBK,EAAa,GACbX,EAAW,GACX,MACF,IAAK,KACHY,EAAgBN,EAAQ,GACxBK,EAAa,GACbX,EAAW,GACX,MACF,IAAK,KACL,QACEY,EAAgBN,EAAQ,GACxBK,EAAa,GACbX,EAAW,GAGf,IAAMwB,EAAcC,mBAAQ,WAC1B,OAAIR,EACK,kBAACb,EAAD,CAAYa,GAAIA,GAAKD,GACnBF,EAEP,kBAACP,EAAD,CAAoBO,KAAMA,EAAMY,OAAO,WACpCV,GAIEA,IAER,CAACF,EAAME,EAAMC,IAEhB,OACE,kBAAC1B,EAAD,CACEO,eAtCAA,EAuCAF,MAAOc,EACPX,SAAUA,EACVC,SAAUA,EACVe,QAASA,EACTb,QAASU,EACTX,KAAMU,GAELE,EACAW,I,4CCpBQG,EArCqC,SAAC,GAQ9C,IAPLC,EAOI,EAPJA,IACAC,EAMI,EANJA,MACAC,EAKI,EALJA,YACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,OACAC,EACI,EADJA,UAEA,EAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACMC,EAAcb,mBAAQ,kBAAMc,YAAsBX,KAAM,CAACA,IAEzDY,EAAeC,uBAAY,SAACC,GAAD,OAA0CL,EAAOK,EAAEC,cAAcC,SAAQ,CAACP,IAErGQ,EAAkBJ,uBAAY,WAClCJ,EAAOC,KACN,CAACA,EAAaD,IAEjB,OACE,kBAACS,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAY/B,KAAMa,IAClB,kBAACmB,EAAA,EAAD,CACEJ,MAAOR,EACPa,YAAaJ,EACbK,SAAUV,EACVZ,IAAKU,EACLa,OAAQjB,IAEV,kBAACkB,EAAA,EAAD,CAAOpC,KAAMc,IACb,kBAACuB,EAAA,EAAD,KACE,kBAAC,EAAD,CAAQrC,KAAK,SAASD,QAASiB,IAC/B,kBAAC,EAAD,CAAQhB,KAAMiB,EAAQlB,QAAS,kBAAMgB,EAAUK,S,2BC3BxCkB,I,6BAAAA,GAlBf,WACE,IAAMC,EAAWC,cAEjB,OAAOf,uBACL,SAACgB,GAAwD,IAAjCC,EAAgC,uDANlC,gCAOpBD,EAAQE,OAAM,SAACC,GACTA,EAAIF,QAAQG,SAAS,iBAIzBC,QAAQC,MAAR,8BAAqCH,EAAII,QACzCT,EAAS,CAACQ,MAAO,CAACL,UAASM,MAAOJ,EAAII,eAG1C,CAACT,KC+FCU,GAAkBzE,IAAO0E,IAAV,qMAQL,SAACxE,GAAD,OAAYA,EAAMC,MAAMW,QAAQ,MAG1C6D,GAAiB3E,IAAO0E,IAAV,gNACI,SAACxE,GAAD,OAAWA,EAAMC,MAAMC,MAAMC,KAAK,QAOvC,SAACH,GAAD,OAAWA,EAAMC,MAAMW,QAAQ,MAG5C8D,GAAkB5E,IAAO0E,IAAV,+FAGF,SAACxE,GAAD,OAAWA,EAAMC,MAAMW,QAAQ,MAG5C+D,GAAsB7E,IAAO0E,IAAV,2HAEP,SAACxE,GAAD,OAAWA,EAAMC,MAAMW,QAAQ,MAC9B,SAACZ,GAAD,OAAWA,EAAMC,MAAMW,QAAQ,MAC9B,SAACZ,GAAD,OAAWA,EAAMC,MAAMW,QAAQ,MAG7CgE,GAAc9E,IAAO0E,IAAV,sHAOXK,GAAoB/E,IAAO0E,IAAV,gHAGP,SAACxE,GAAD,OAAWA,EAAMC,MAAMW,QAAQ,MAIzCkE,GAAahF,IAAOiF,KAAV,0BAEVC,GAAyBlF,IAAO0E,IAAV,gJAQbS,GA7ImC,SAAC,GAU5C,IATL1C,EASI,EATJA,OACA2C,EAQI,EARJA,UACAC,EAOI,EAPJA,cACAC,EAMI,EANJA,QACAC,EAKI,EALJA,YACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,WAGI,IAFJlF,gBAEI,SADJmF,EACI,EADJA,oBAEMC,EAAa7B,KAEL8B,EACVC,cADFC,UAAYF,SAEd,EAAiCG,YAAWX,EAAWQ,EAASI,SAAhE,mBAAOC,EAAP,KAAsBC,EAAtB,KAEMC,EAAUC,YAAgBhB,GAChC,EAA+BiB,YAC7B,kBAAC,EAAD,CACEhE,MAAOI,EACPH,YAAakD,EACbpD,IAAK+D,EACL5D,UAAW,SAACa,GACVqC,EAAWrC,GACXZ,KAEFC,OAAQA,EACRC,UAAW2C,KAVf,mBAAOiB,EAAP,KAAkB9D,EAAlB,KAaA,OACE,kBAAC+D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACtB,GAAD,KACE,kBAACT,GAAD,eAAqBhC,EAArB,YAA+B8C,IAC/B,kBAACX,GAAD,KACE,kBAACE,GAAD,KACE,kBAACH,GAAD,KACE,kBAAC8B,EAAA,EAAD,CAAa9C,OAAQyB,EAAUzB,OAAQlD,KAAM,MAE/C,kBAACmD,EAAA,EAAD,CAAOpC,KAAM6D,EAAe3D,QAAQ,aAEtC,kBAACmD,GAAD,KACE,kBAAC,IAAD,CAAiB6B,KAAMC,OAEzB,kBAAC7B,GAAD,KACE,kBAACH,GAAD,KACE,kBAAC8B,EAAA,EAAD,CAAa9C,OAAQ2B,EAAQ3B,OAAQlD,KAAM,MAE7C,kBAACmD,EAAA,EAAD,CAAOpC,KAAM+D,EAAa7D,QAAQ,cAGtC,kBAACsD,GAAD,KAAaQ,GACb,kBAACT,GAAD,KACGkB,IAAkBW,IAAcC,UAAatG,EAU5C,kBAAC,IAAD,CACEE,KAAK,QACLL,MAAM,UAAUsB,QAAQ,YACxBH,QAAS+E,EAET/F,UAAQ,GAEPmF,GAAuBjD,GAhB1B,kBAAC,IAAD,CACEhC,KAAK,QACLL,MAAM,UAAUsB,QAAQ,YACxBnB,SAAU0F,IAAkBW,IAAcE,SAAWb,IAAkBW,IAAcG,QACrFxF,QAAS,kBAAMoE,EAAWO,IAAD,4BAAiCb,MAJ5D,kBAMcA,S,sCCxEb2B,GAjBgB,WAC7B,MAA0BrE,mBAAoBsE,KAAUC,KAAK,IAA7D,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAcxB,cAEdyB,EAAiBrE,sBAAW,sBAAC,sBAAAjC,EAAA,kEACjCoG,EADiC,SAClBC,EAAYE,yBADM,6EAEhC,CAACF,IAQJ,OANAG,qBAAU,WACRF,IAAiBnD,OAAM,SAACC,GAAD,OAASE,QAAQC,MAAR,sCAA6CH,EAAII,WACjF,IAAMiD,EAAkBC,YAAYJ,EAAgBK,KAAOF,iBAC3D,OAAO,kBAAMG,cAAcH,MAC1B,CAACL,EAAUC,EAAaC,IAEpBH,G,UCGH1C,GAAkBzE,IAAO0E,IAAV,+HAIF,SAACxE,GAAD,OAAWA,EAAMC,MAAMW,QAAQ,MAG5CkE,GAAahF,IAAOiF,KAAV,oFAKVC,GAAyBlF,IAAO0E,IAAV,iKAMf,SAACxE,GAAD,OAAWA,EAAMC,MAAMW,QAAQ,MAG7B+G,GAhCmC,SAAC,GAAqC,IAApCnF,EAAmC,EAAnCA,UAAWJ,EAAwB,EAAxBA,YAAa6E,EAAW,EAAXA,MAC1E,OACE,kBAACZ,EAAA,EAAD,CAAMuB,MAAO,CAACC,gBAAgB,YAAYzH,UAAW,SACnD,kBAAC,GAAD,KACE,kBAAC,GAAD,4BAAwBoC,EAAxB,cAAuCyE,EAAvC,SACA,kBAAC,GAAD,KAAa7E,MCQN0F,GAlBa,WAC1B,MAA8BrF,mBAASsE,KAAUC,KAAK,IAAtD,mBAAOf,EAAP,KAAgB8B,EAAhB,KACMZ,EAAcxB,cAapB,OAXA2B,qBAAU,WAAM,4CACd,sBAAAxG,EAAA,2EAEIiH,EAFJ,SAEqBZ,EAAYa,sBAFjC,kFAII5D,QAAQC,MAAR,MAJJ,0DADc,uBAAC,WAAD,wBAQd4D,KACC,CAACF,EAAYZ,IAETlB,GCnBIiC,GAAcnB,KAAUC,KAAK,IAAImB,IAAI,IAGrCC,GAAuBF,GAAYG,IAAI,KAAK7D,IAAI,K,qDC+IvD8D,GAAaxI,IAAO0E,IAAV,6JASV+D,GAAoBzI,IAAO0E,IAAV,4LAYjBgE,GAAqB1I,IAAO0E,IAAV,6MAaTiE,GA3JQ,WACrB,IAAOC,EAAQC,cAARD,KACAE,EAAWC,cAAXD,QACDzB,EAAcxB,cACdmD,EAAiBC,eACjBC,EAAWC,eAEXC,EAAYpC,KAEZqC,EAAmBrB,KAEnBsB,EAAclD,YAAe,OAACiB,QAAD,IAACA,OAAD,EAACA,EAAakC,MAG3CC,EAAiBvG,sBAAW,uCAChC,WAAOwG,GAAP,eAAAzI,EAAA,sEACmBqG,EAAYqC,SAASD,GADxC,OACQE,EADR,OAEEX,EAAeW,EAAI,CACjBC,QAAQ,OAAD,OAASC,OAAOJ,GAAQK,QAAQ,GAAhC,sBAAgDL,EAAhD,WAHX,2CADgC,sDAOhC,CAACpC,EAAa2B,IAGVe,EAAoB9G,sBAAW,uCACnC,WAAOwG,GAAP,eAAAzI,EAAA,sEACmBqG,EAAY2C,YAAYP,GAD3C,OACQE,EADR,OAEEX,EAAeW,EAAI,CAACC,QAAQ,UAAD,OAAYH,EAAZ,WAF7B,2CADmC,sDAKnC,CAACpC,EAAa2B,IAEViB,EAAmBhI,mBAAQ,kBAAMmH,EAAUc,GAAG5B,MAAuB,CAACc,IACtEe,EAAoBlI,mBAAQ,kBAAM4H,OAAM,OAACX,QAAD,IAACA,OAAD,EAACA,EAAUkB,YAAc,OAAM,CAAClB,IACxEmB,EAAsBpI,mBAAQ,kBAAM4H,OAAM,OAACX,QAAD,IAACA,OAAD,EAACA,EAAUkB,aAAe,MAAK,CAAClB,IAC1EoB,GAAaT,OAAOT,GAAa,MAAmBU,QAAQ,GAElE,OACE,kBAAC,IAAD,KACE,kBAACS,EAAA,EAAD,KACE,kBAAC,KAAD,MACM,kBAACC,GAAA,EAAD,KACN,+BA3CM,yBA6CH1B,EACD,oCACE,kBAAC,IAAD,CAAO2B,OAAK,EAAC7B,KAAMA,GACjB,wBAAId,MAAO,CAAC1H,MAAM,QAASsK,UAAU,WAArC,sBACA,uBAAG5C,MAAO,CAAC1H,MAAM,QAASsK,UAAU,WAApC,kCAKA,kBAACC,GAAA,EAAD,CAAKC,GAAI,EAAG9C,MAAO,CAAC+C,UAAU,UACP,IAAxBR,EACG,kBAACS,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,QAAQ,SAASpD,MAAO,CAAEqD,OAAQ,OAAQC,QAAS,SAC9E,kBAACC,GAAA,EAAD,CAAOvD,MAAO,CAACtH,SAAW,OAAQ8K,WAAW,qBAAsB5J,QAAQ,SAAS6J,SAAS,SACzF,0GAKF,sCAIN,kBAAC/C,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,CACEhG,OAAO,WACP2C,UAAWiC,EAAYmE,KACvBnG,cAAc,OACdC,QAAS+B,EAAYkC,KACrBhE,YAAY,OACZC,UACG2E,EAEGsB,YAAkBpC,EAAkB,GAAI,GAAK,+BAD7C,mBAGN5D,WAAY+D,EACZjJ,UAAW2I,GAAYe,KAI3B,kBAACxB,GAAD,KACE,kBAAC,GAAD,CACEhG,OAAO,SACP2C,UAAWiC,EAAYkC,KACvBlE,cAAc,OACdC,QAAS+B,EAAYmE,KACrBjG,YAAY,OACZC,UAAS,UAAKiG,YAAkBnC,GAAvB,6BACT7D,WAAYsE,EACZxJ,UAAW2I,GAAYI,EAAYoC,GAAG,KAAOzB,EAC7CvE,oBAAsBuE,EAAuE,KAAxE,kCDpHN,KCoHM,WAI3B,kBAACvB,GAAD,KACI,kBAAC,GAAD,CACEhG,UAAU,WACVJ,YAAY,uBAEb6E,MAAOmD,GAAa,MAGrB,kBAACqB,GAAA,EAAD,CAAQlL,KAAK,OACb,kBAAC,GAAD,CACEiC,UAAU,WACVJ,YAAY,0BACZ6E,MAAO0C,OAAM,OAACX,QAAD,IAACA,OAAD,EAACA,EAAUkB,YAAYN,QAAQ,IAAM,QAK1D,kBAAC8B,EAAA,EAAD,U,uECpIEhF,E,kEAHNiF,EAAiBC,IAAOC,UAAUC,WAClCC,EAAsBhF,IAAUC,KAAK,8B,SAE/BN,O,qBAAAA,I,+BAAAA,I,qBAAAA,I,wBAAAA,M,KA8CGb,IAtCf,SAAoBmG,EAAcC,GAChC,IAAMC,EAAkBC,YAAsBH,EAAMlG,QAASmG,GACvDG,EAAmBC,YAAaL,EAAOC,EAASC,GAGhDI,EAA+BvK,mBAAQ,WAE3C,OAAKqK,EAGEA,EAAiBG,GAAGR,GACvBG,EACExF,EAAcE,QACdF,EAAc8F,aAChB9F,EAAcC,SAPYD,EAAcG,UAQ3C,CAACuF,EAAkBF,IAEhBpD,EAAiBC,cAEjB/C,EAAUjD,sBAAW,sBAAC,4BAAAjC,EAAA,yDACtBwL,IAAkB5F,EAAc8F,aADV,uBAExBpI,QAAQC,MAAM,oCAFU,0CAMH2H,EAAMhG,QAAQiG,EAASN,GANpB,OAMpBc,EANoB,OAO1B3D,EAAe2D,EAAU,CACvB/C,QAAQ,WAAD,OAAasC,EAAMvI,QAC1BiJ,SAAU,CACRC,aAAcX,EAAMlG,QACpBmG,QAASA,KAXa,2CAczB,CAACK,EAAeN,EAAOC,EAASnD,IAEnC,MAAO,CAACwD,EAAetG,K,2GCvCV0F,EATM,WACnB,OACE,kBAACjB,EAAA,EAAD,CAAK7C,MAAO,CAACgF,SAAU,WAAYC,IAAK,MAAOC,KAAM,MAAOC,UAAW,0BACrE,kBAACC,EAAA,EAAD,S,yGCuBAC,EAAenN,IAAO0E,IAAV,+DACN,SAACxE,GAAD,OAAWA,EAAMO,QAClB,SAACP,GAAD,OAAWA,EAAMO,QAGbkL,EA5BuB,SAAC,GAAmB,IAGpDyB,EAHmD,IAAjB3M,YAAiB,MAAV,KAAU,EAChDK,EAAWa,qBAAWC,KAAtBd,QAGP,OAAQL,GACN,IAAK,KACH2M,EAAItM,EAAQ,GACZ,MACF,IAAK,KACHsM,EAAItM,EAAQ,GACZ,MACF,IAAK,KACL,QACEsM,EAAItM,EAAQ,GAGhB,OAAO,kBAACqM,EAAD,CAAc1M,KAAM2M","file":"static/js/13.e06af1a7.chunk.js","sourcesContent":["import React, {useContext, useMemo} from 'react';\r\nimport styled, {ThemeContext} from 'styled-components';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\ninterface ButtonProps {\r\n  children?: React.ReactNode;\r\n  disabled?: boolean;\r\n  href?: string;\r\n  onClick?: () => void;\r\n  size?: 'sm' | 'md' | 'lg';\r\n  text?: string;\r\n  to?: string;\r\n  variant?: 'default' | 'secondary' | 'tertiary';\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({children, disabled, href, onClick, size, text, to, variant}) => {\r\n  const {color, spacing} = useContext(ThemeContext);\r\n\r\n  let buttonColor: string;\r\n  switch (variant) {\r\n    case 'secondary':\r\n      buttonColor = color.teal[200];\r\n      break;\r\n    case 'default':\r\n    default:\r\n      buttonColor = color.primary.main;\r\n  }\r\n\r\n  let boxShadow: string;\r\n  let buttonSize: number;\r\n  let buttonPadding: number;\r\n  let fontSize: number;\r\n  switch (size) {\r\n    case 'sm':\r\n      buttonPadding = spacing[2];\r\n      buttonSize = 36;\r\n      fontSize = 10;\r\n      break;\r\n    case 'lg':\r\n      buttonPadding = spacing[4];\r\n      buttonSize = 72;\r\n      fontSize = 16;\r\n      break;\r\n    case 'md':\r\n    default:\r\n      buttonPadding = spacing[4];\r\n      buttonSize = 56;\r\n      fontSize = 16;\r\n  }\r\n\r\n  const ButtonChild = useMemo(() => {\r\n    if (to) {\r\n      return <StyledLink to={to}>{text}</StyledLink>;\r\n    } else if (href) {\r\n      return (\r\n        <StyledExternalLink href={href} target=\"__blank\">\r\n          {text}\r\n        </StyledExternalLink>\r\n      );\r\n    } else {\r\n      return text;\r\n    }\r\n  }, [href, text, to]);\r\n\r\n  return (\r\n    <StyledButton\r\n      boxShadow={boxShadow}\r\n      color={buttonColor}\r\n      disabled={disabled}\r\n      fontSize={fontSize}\r\n      onClick={onClick}\r\n      padding={buttonPadding}\r\n      size={buttonSize}\r\n    >\r\n      {children}\r\n      {ButtonChild}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\ninterface StyledButtonProps {\r\n  boxShadow: string;\r\n  color: string;\r\n  disabled?: boolean;\r\n  fontSize: number;\r\n  padding: number;\r\n  size: number;\r\n}\r\n\r\nconst StyledButton = styled.button<StyledButtonProps>`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.color.grey[900]};\r\n  border: 0;\r\n  border-radius: 12px;\r\n  box-shadow: ${(props) => props.boxShadow};\r\n  color: ${(props) => (!props.disabled ? props.color : `${props.color}55`)};\r\n  cursor: pointer;\r\n  display: flex;\r\n  font-size: ${(props) => props.fontSize}px;\r\n  font-weight: 700;\r\n  height: ${(props) => props.size}px;\r\n  justify-content: center;\r\n  outline: none;\r\n  padding-left: ${(props) => props.padding}px;\r\n  padding-right: ${(props) => props.padding}px;\r\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\r\n  width: 100%;\r\n  &:hover {\r\n    background-color: ${(props) => props.color};\r\n    color: ${(props) => props.theme.color.grey[900]};\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst StyledExternalLink = styled.a`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`;\r\n\r\nexport default Button;\r\n","import React, {useCallback, useMemo, useState} from 'react';\r\nimport Button from '../../../components/Button';\r\nimport Modal, {ModalProps} from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\nimport ModalTitle from '../../../components/ModalTitle';\r\nimport TokenInput from '../../../components/TokenInput';\r\nimport {getFullDisplayBalance} from '../../../utils/formatBalance';\r\nimport {BigNumber} from 'ethers';\r\nimport Label from '../../../components/Label';\r\n\r\ninterface ExchangeModalProps extends ModalProps {\r\n  max: BigNumber;\r\n  onConfirm: (amount: string) => void;\r\n  title: string;\r\n  description: string;\r\n  action: string;\r\n  tokenName: string;\r\n}\r\n\r\nconst ExchangeModal: React.FC<ExchangeModalProps> = ({\r\n  max,\r\n  title,\r\n  description,\r\n  onConfirm,\r\n  onDismiss,\r\n  action,\r\n  tokenName,\r\n}) => {\r\n  const [val, setVal] = useState('');\r\n  const fullBalance = useMemo(() => getFullDisplayBalance(max), [max]);\r\n\r\n  const handleChange = useCallback((e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value), [setVal]);\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance);\r\n  }, [fullBalance, setVal]);\r\n\r\n  return (\r\n    <Modal>\r\n      <ModalTitle text={title} />\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <Label text={description} />\r\n      <ModalActions>\r\n        <Button text=\"Cancel\" onClick={onDismiss} />\r\n        <Button text={action} onClick={() => onConfirm(val)} />\r\n      </ModalActions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ExchangeModal;\r\n","import {useCallback} from 'react';\r\nimport {useAddPopup} from '../state/application/hooks';\r\n\r\nconst DEFAULT_ERROR_MSG = 'Unexpected error is occurred.';\r\n\r\nfunction useCatchError(): (promise: Promise<any>, message?: string) => void {\r\n  const addPopup = useAddPopup();\r\n\r\n  return useCallback(\r\n    (promise: Promise<any>, message = DEFAULT_ERROR_MSG) => {\r\n      promise.catch((err) => {\r\n        if (err.message.includes('User denied')) {\r\n          // User denied transaction signature on MetaMask.\r\n          return;\r\n        }\r\n        console.error(`Uncaught exception: ${err.stack}`);\r\n        addPopup({error: {message, stack: err.stack}});\r\n      });\r\n    },\r\n    [addPopup],\r\n  );\r\n}\r\n\r\nexport default useCatchError;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport {Button, Card} from '@material-ui/core';\r\n\r\n// import Button from '../../../components/Button';\r\n// import Card from '../../../components/Card';\r\nimport CardContent from '../../../components/CardContent';\r\nimport useBnbmFinance from '../../../hooks/useBnbmFinance';\r\nimport Label from '../../../components/Label';\r\nimport TokenSymbol from '../../../components/TokenSymbol';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faArrowRight} from '@fortawesome/free-solid-svg-icons';\r\nimport useModal from '../../../hooks/useModal';\r\nimport ExchangeModal from './ExchangeModal';\r\nimport ERC20 from '../../../bnbm-finance/ERC20';\r\nimport useTokenBalance from '../../../hooks/useTokenBalance';\r\nimport useApprove, {ApprovalState} from '../../../hooks/useApprove';\r\nimport useCatchError from '../../../hooks/useCatchError';\r\n\r\ninterface ExchangeCardProps {\r\n  action: string;\r\n  fromToken: ERC20;\r\n  fromTokenName: string;\r\n  toToken: ERC20;\r\n  toTokenName: string;\r\n  priceDesc: string;\r\n  onExchange: (amount: string) => void;\r\n  disabled?: boolean;\r\n  disabledDescription?: string;\r\n}\r\n\r\nconst ExchangeCard: React.FC<ExchangeCardProps> = ({\r\n  action,\r\n  fromToken,\r\n  fromTokenName,\r\n  toToken,\r\n  toTokenName,\r\n  priceDesc,\r\n  onExchange,\r\n  disabled = false,\r\n  disabledDescription,\r\n}) => {\r\n  const catchError = useCatchError();\r\n  const {\r\n    contracts: {Treasury},\r\n  } = useBnbmFinance();\r\n  const [approveStatus, approve] = useApprove(fromToken, Treasury.address);\r\n\r\n  const balance = useTokenBalance(fromToken);\r\n  const [onPresent, onDismiss] = useModal(\r\n    <ExchangeModal\r\n      title={action}\r\n      description={priceDesc}\r\n      max={balance}\r\n      onConfirm={(value) => {\r\n        onExchange(value);\r\n        onDismiss();\r\n      }}\r\n      action={action}\r\n      tokenName={fromTokenName}\r\n    />,\r\n  );\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <StyledCardContentInner>\r\n          <StyledCardTitle>{`${action} ${toTokenName}`}</StyledCardTitle>\r\n          <StyledExchanger>\r\n            <StyledToken>\r\n              <StyledCardIcon>\r\n                <TokenSymbol symbol={fromToken.symbol} size={64} />\r\n              </StyledCardIcon>\r\n              <Label text={fromTokenName} variant=\"primary\" />\r\n            </StyledToken>\r\n            <StyledExchangeArrow>\r\n              <FontAwesomeIcon icon={faArrowRight} />\r\n            </StyledExchangeArrow>\r\n            <StyledToken>\r\n              <StyledCardIcon>\r\n                <TokenSymbol symbol={toToken.symbol} size={64} />\r\n              </StyledCardIcon>\r\n              <Label text={toTokenName} variant=\"primary\" />\r\n            </StyledToken>\r\n          </StyledExchanger>\r\n          <StyledDesc>{priceDesc}</StyledDesc>\r\n          <StyledCardActions>\r\n            {approveStatus !== ApprovalState.APPROVED && !disabled ? (\r\n              <Button\r\n                size=\"small\"\r\n                color=\"primary\" variant=\"contained\"\r\n                disabled={approveStatus === ApprovalState.PENDING || approveStatus === ApprovalState.UNKNOWN}\r\n                onClick={() => catchError(approve(), `Unable to approve ${fromTokenName}`)}\r\n              >\r\n                {`Approve ${fromTokenName}`}\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                size=\"small\"\r\n                color=\"primary\" variant=\"contained\"\r\n                onClick={onPresent}\r\n                //disabled={disabled}\r\n                disabled\r\n              >\r\n                {disabledDescription || action}\r\n              </Button>\r\n            )}\r\n          </StyledCardActions>\r\n        </StyledCardContentInner>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst StyledCardTitle = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  height: 64px;\r\n  justify-content: center;\r\n  color: #ffffff;\r\n  margin-top: ${(props) => -props.theme.spacing[3]}px;\r\n`;\r\n\r\nconst StyledCardIcon = styled.div`\r\n  //background-color: ${(props) => props.theme.color.grey[900]};\r\n  width: 72px;\r\n  height: 72px;\r\n  border-radius: 36px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: ${(props) => props.theme.spacing[2]}px;\r\n`;\r\n\r\nconst StyledExchanger = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  margin-bottom: ${(props) => props.theme.spacing[5]}px;\r\n`;\r\n\r\nconst StyledExchangeArrow = styled.div`\r\n  font-size: 20px;\r\n  padding-left: ${(props) => props.theme.spacing[3]}px;\r\n  padding-right: ${(props) => props.theme.spacing[3]}px;\r\n  padding-bottom: ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nconst StyledToken = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledDesc = styled.span``;\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport default ExchangeCard;\r\n","import {useCallback, useEffect, useState} from 'react';\r\nimport useBnbmFinance from './useBnbmFinance';\r\nimport config from '../config';\r\nimport {BigNumber} from 'ethers';\r\n\r\nconst useCashPriceInLastTWAP = () => {\r\n  const [price, setPrice] = useState<BigNumber>(BigNumber.from(0));\r\n  const bnbmFinance = useBnbmFinance();\r\n\r\n  const fetchCashPrice = useCallback(async () => {\r\n    setPrice(await bnbmFinance.getBnbmPriceInLastTWAP());\r\n  }, [bnbmFinance]);\r\n\r\n  useEffect(() => {\r\n    fetchCashPrice().catch((err) => console.error(`Failed to fetch BNBM price: ${err.stack}`));\r\n    const refreshInterval = setInterval(fetchCashPrice, config.refreshInterval);\r\n    return () => clearInterval(refreshInterval);\r\n  }, [setPrice, bnbmFinance, fetchCashPrice]);\r\n\r\n  return price;\r\n};\r\n\r\nexport default useCashPriceInLastTWAP;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport {Card} from '@material-ui/core';\r\n\r\ninterface ExchangeStatProps {\r\n  tokenName: string;\r\n  description: string;\r\n  price: string;\r\n}\r\n\r\nconst ExchangeStat: React.FC<ExchangeStatProps> = ({tokenName, description, price}) => {\r\n  return (\r\n    <Card style={{backgroundColor:'#00000000',boxShadow: 'none'}}>\r\n      <StyledCardContentInner>\r\n        <StyledCardTitle>{`💰 ${tokenName} = ${price} BNB`}</StyledCardTitle>\r\n        <StyledDesc>{description}</StyledDesc>\r\n      </StyledCardContentInner>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst StyledCardTitle = styled.div`\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  text-shadow: 2px 2px #000000;\r\n  margin-bottom: ${(props) => props.theme.spacing[2]}px;\r\n`;\r\n\r\nconst StyledDesc = styled.span`\r\n  text-shadow: 1px 1px #000000;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding: ${(props) => props.theme.spacing[2]}px;\r\n`;\r\n\r\nexport default ExchangeStat;\r\n","import {useEffect, useState} from 'react';\r\nimport {BigNumber} from 'ethers';\r\n//import ERC20 from '../bnbm-finance/ERC20';\r\nimport useBnbmFinance from './useBnbmFinance';\r\n//import config from '../config';\r\n\r\nconst useBondsPurchasable = () => {\r\n  const [balance, setBalance] = useState(BigNumber.from(0));\r\n  const bnbmFinance = useBnbmFinance();\r\n\r\n  useEffect(() => {\r\n    async function fetchBondsPurchasable() {\r\n      try {\r\n        setBalance(await bnbmFinance.getBondsPurchasable());\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n    fetchBondsPurchasable();\r\n  }, [setBalance, bnbmFinance]);\r\n\r\n  return balance;\r\n};\r\n\r\nexport default useBondsPurchasable;\r\n","import {BigNumber} from 'ethers';\r\n\r\nexport const DECIMALS_18 = BigNumber.from(10).pow(16);\r\n\r\nexport const BOND_REDEEM_PRICE = 1.01;\r\nexport const BOND_REDEEM_PRICE_BN = DECIMALS_18.mul(101).div(100);\r\n","import React, {useCallback, useMemo} from 'react';\r\nimport Page from '../../components/Page';\r\nimport {createGlobalStyle} from 'styled-components';\r\nimport {Route, Switch, useRouteMatch} from 'react-router-dom';\r\nimport {useWallet} from 'use-wallet';\r\nimport UnlockWallet from '../../components/UnlockWallet';\r\nimport PageHeader from '../../components/PageHeader';\r\nimport ExchangeCard from './components/ExchangeCard';\r\nimport styled from 'styled-components';\r\nimport Spacer from '../../components/Spacer';\r\nimport useBondStats from '../../hooks/useBondStats';\r\n//import useBnbmStats from '../../hooks/useBnbmStats';\r\nimport useBnbmFinance from '../../hooks/useBnbmFinance';\r\nimport useCashPriceInLastTWAP from '../../hooks/useCashPriceInLastTWAP';\r\nimport {useTransactionAdder} from '../../state/transactions/hooks';\r\nimport ExchangeStat from './components/ExchangeStat';\r\nimport useTokenBalance from '../../hooks/useTokenBalance';\r\nimport useBondsPurchasable from '../../hooks/useBondsPurchasable';\r\nimport {getDisplayBalance} from '../../utils/formatBalance';\r\nimport { BOND_REDEEM_PRICE, BOND_REDEEM_PRICE_BN } from '../../bnbm-finance/constants';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { Grid, Box } from '@material-ui/core';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport {BackgroundImage} from '../Home/Home.js';\r\nconst TITLE = 'bnbm.finance | Bonds'\r\n\r\nconst Bond: React.FC = () => {\r\n  const {path} = useRouteMatch();\r\n  const {account} = useWallet();\r\n  const bnbmFinance = useBnbmFinance();\r\n  const addTransaction = useTransactionAdder();\r\n  const bondStat = useBondStats();\r\n  //const bnbmStat = useBnbmStats();\r\n  const cashPrice = useCashPriceInLastTWAP();\r\n\r\n  const bondsPurchasable = useBondsPurchasable();\r\n\r\n  const bondBalance = useTokenBalance(bnbmFinance?.BBNB);\r\n  //const scalingFactor = useMemo(() => (cashPrice ? Number(cashPrice) : null), [cashPrice]);\r\n  \r\n  const handleBuyBonds = useCallback(\r\n    async (amount: string) => {\r\n      const tx = await bnbmFinance.buyBonds(amount);\r\n      addTransaction(tx, {\r\n        summary: `Buy ${Number(amount).toFixed(2)} BBNB with ${amount} BNBM`,\r\n      });\r\n    },\r\n    [bnbmFinance, addTransaction],\r\n  );\r\n\r\n  const handleRedeemBonds = useCallback(\r\n    async (amount: string) => {\r\n      const tx = await bnbmFinance.redeemBonds(amount);\r\n      addTransaction(tx, {summary: `Redeem ${amount} BBNB`});\r\n    },\r\n    [bnbmFinance, addTransaction],\r\n  );\r\n  const isBondRedeemable = useMemo(() => cashPrice.gt(BOND_REDEEM_PRICE_BN), [cashPrice]);\r\n  const isBondPurchasable = useMemo(() => Number(bondStat?.tokenInFtm) < 1.01, [bondStat]);\r\n  const isBondPayingPremium = useMemo(() => Number(bondStat?.tokenInFtm) >= 1.1, [bondStat]);\r\n  const bondScale = (Number(cashPrice) / 10000000000000000).toFixed(2); \r\n\r\n  return (\r\n    <Switch>\r\n      <Page>\r\n        <BackgroundImage />\r\n              <Helmet>\r\n        <title>{TITLE}</title>\r\n      </Helmet>\r\n        {!!account ? (\r\n          <>\r\n            <Route exact path={path} >\r\n              <h2 style={{color:'white', textAlign:'center'}}>Buy &amp; Redeem Bonds</h2>\r\n              <p style={{color:'white', textAlign:'center'}}>Earn premiums upon redemption</p>\r\n            </Route>\r\n            \r\n\r\n\r\n              <Box mt={5} style={{marginTop:'30px'}}>\r\n            {isBondPayingPremium === false ? (  \r\n                <Grid item xs={12} sm={12} justify=\"center\" style={{ margin: '18px', display: 'flex' }}>\r\n                <Alert style={{fontSize : '16px', fontFamily:'eurostyleextended'}} variant=\"filled\" severity=\"error\">\r\n                    <b>\r\n                      Claiming below 1.1 peg will not receive a redemption bonus, claim wisely!</b>\r\n              </Alert>\r\n            \r\n              </Grid>\r\n              ) : <></>}\r\n              </Box>\r\n            \r\n          \r\n            <StyledBond>\r\n              <StyledCardWrapper>\r\n                <ExchangeCard\r\n                  action=\"Purchase\"\r\n                  fromToken={bnbmFinance.BNBM}\r\n                  fromTokenName=\"BNBM\"\r\n                  toToken={bnbmFinance.BBNB}\r\n                  toTokenName=\"BBNB\"\r\n                  priceDesc={\r\n                    !isBondPurchasable\r\n                      ? 'BNBM is over peg'\r\n                      : getDisplayBalance(bondsPurchasable, 18, 2) + ' BBNB available for purchase'\r\n                  }\r\n                  onExchange={handleBuyBonds}\r\n                  disabled={!bondStat || isBondRedeemable}\r\n                />\r\n              </StyledCardWrapper>\r\n              \r\n              <StyledCardWrapper>\r\n                <ExchangeCard\r\n                  action=\"Redeem\"\r\n                  fromToken={bnbmFinance.BBNB}\r\n                  fromTokenName=\"BBNB\"\r\n                  toToken={bnbmFinance.BNBM}\r\n                  toTokenName=\"BNBM\"\r\n                  priceDesc={`${getDisplayBalance(bondBalance)} BBNB Available in wallet`}\r\n                  onExchange={handleRedeemBonds}\r\n                  disabled={!bondStat || bondBalance.eq(0) || !isBondRedeemable}\r\n                  disabledDescription={!isBondRedeemable ? `Enabled when 100 BNBM > ${BOND_REDEEM_PRICE}BNB` : null}\r\n                />\r\n              </StyledCardWrapper>\r\n            </StyledBond>\r\n            <StyledStatsWrapper>\r\n                <ExchangeStat\r\n                  tokenName=\"100 BNBM\"\r\n                  description=\"Last-Hour TWAP Price\"\r\n                  //price={Number(bnbmStat?.tokenInFtm).toFixed(4) || '-'}\r\n                 price={bondScale || '-'}\r\n\r\n                />\r\n                <Spacer size=\"md\" />\r\n                <ExchangeStat\r\n                  tokenName=\"100 BBNB\"\r\n                  description=\"Current Price: (BNBM)^2\"\r\n                  price={Number(bondStat?.tokenInFtm).toFixed(4) || '-'}\r\n                />\r\n              </StyledStatsWrapper>\r\n          </>\r\n        ) : (\r\n          <UnlockWallet />\r\n        )}\r\n      </Page>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nconst StyledBond = styled.div`\r\n  display: flex;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst StyledCardWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n  };\r\n  margin-right: 40px;\r\n  margin-left: 40px;\r\n  \r\n`;\r\n\r\nconst StyledStatsWrapper = styled.div`\r\n  display: flex;\r\n  flex: 0.8;\r\n  margin: 0 20px;\r\n  flex-direction: column;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n    margin: 16px 0;\r\n  };\r\n  margin-top: 40px\r\n`;\r\n\r\nexport default Bond;\r\n","import {BigNumber, ethers} from 'ethers';\r\nimport {useCallback, useMemo} from 'react';\r\nimport {useHasPendingApproval, useTransactionAdder} from '../state/transactions/hooks';\r\nimport useAllowance from './useAllowance';\r\nimport ERC20 from '../bnbm-finance/ERC20';\r\n\r\nconst APPROVE_AMOUNT = ethers.constants.MaxUint256;\r\nconst APPROVE_BASE_AMOUNT = BigNumber.from('1000000000000000000000000');\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN,\r\n  NOT_APPROVED,\r\n  PENDING,\r\n  APPROVED,\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nfunction useApprove(token: ERC20, spender: string): [ApprovalState, () => Promise<void>] {\r\n  const pendingApproval = useHasPendingApproval(token.address, spender);\r\n  const currentAllowance = useAllowance(token, spender, pendingApproval);\r\n\r\n  // check the current approval status\r\n  const approvalState: ApprovalState = useMemo(() => {\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\r\n\r\n    // amountToApprove will be defined if currentAllowance is\r\n    return currentAllowance.lt(APPROVE_BASE_AMOUNT)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED;\r\n  }, [currentAllowance, pendingApproval]);\r\n\r\n  const addTransaction = useTransactionAdder();\r\n\r\n  const approve = useCallback(async (): Promise<void> => {\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      console.error('approve was called unnecessarily');\r\n      return;\r\n    }\r\n\r\n    const response = await token.approve(spender, APPROVE_AMOUNT);\r\n    addTransaction(response, {\r\n      summary: `Approve ${token.symbol}`,\r\n      approval: {\r\n        tokenAddress: token.address,\r\n        spender: spender,\r\n      },\r\n    });\r\n  }, [approvalState, token, spender, addTransaction]);\r\n\r\n  return [approvalState, approve];\r\n}\r\n\r\nexport default useApprove;\r\n","import React from 'react';\r\nimport {Box} from '@material-ui/core';\r\nimport AccountButton from '../Nav/AccountButton';\r\n\r\nconst UnlockWallet = () => {\r\n  return (\r\n    <Box style={{position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)'}}>\r\n      <AccountButton />\r\n      {/* <Button color=\"primary\" variant=\"contained\" onClick={() => connect('injected')}>Unlock Wallet</Button> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UnlockWallet;\r\n","import React, {useContext} from 'react';\r\nimport styled, {ThemeContext} from 'styled-components';\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg';\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({size = 'md'}) => {\r\n  const {spacing} = useContext(ThemeContext);\r\n\r\n  let s: number;\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6];\r\n      break;\r\n    case 'sm':\r\n      s = spacing[2];\r\n      break;\r\n    case 'md':\r\n    default:\r\n      s = spacing[4];\r\n  }\r\n\r\n  return <StyledSpacer size={s} />;\r\n};\r\n\r\ninterface StyledSpacerProps {\r\n  size: number;\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`;\r\n\r\nexport default Spacer;\r\n"],"sourceRoot":""}